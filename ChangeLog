2001-10-08  Will Woods <will.woods@compaq.com>
	* fs/ext2.c: Fixed elusive overflow bug. If part of the kernel was 
	past the 524,287th block (given 4096 bytes per block) the byte offset
	was too big to fit in an int. 
	* sdisklabel/sdisklabel.c: borrowed code from fdisk for getting
	the correct size of the disk. 
	
2001-07-10  Will Woods <will.woods@compaq.com>
	* aboot.c, tools/objstrip.c: elf_check_arch takes different arguments
	in Linux 2.4 than it did in 2.2; added an aboot_elf_check_arch which
	does the right thing based on version info from linux/version.h. 
	* disk.c: a function called get_options exists in 2.4 kernels, so
	aboot's get_options function was renamed get_aboot_options(). 
	(both changes based on a patch by Christian Groessler <cpg@aladdin.de>)

2001-04-26  Will Woods <will.woods@compaq.com>
	* disk.c: changed /etc/aboot.conf and aboot.conf back to their
	original settings. If it ain't broke, why fix it?
	* added the man pages in doc/man, written by Helge Kreutzmann
	<kreutzm@itp.uni-hannover.de> (Thanks Helge!)

2001-03-20  Will Woods <will.woods@compaq.com>
	* disk.c: swapped position of /etc/aboot.conf and aboot.conf in the 
	configs array, making /aboot.conf the default.
	* isolib.c: added parse_rock_ridge_inode and get_rock_ridge_symlink
	adapted from rock.c in the linux kernel source. 
	* isolib.c: added iso_follow_link and iso_readdir, adapted from
	fs/ext2.c
        * made minor changes here and there to quiet gcc warnings - 
	initializing variables to 0, casting variables properly, etc

2000-06-27  David Huggins-Daines  <dhd@linuxcare.com>

	* sdisklabel/sdisklabel.c (main): Off-by-one error in argument
	checking (not my fault!).
	* disk.c (load_raw): This didn't work at all.  I've changed it to
	use an uncompressed kernel with headers.  Eventually it will be
	fixed so that it can accept compressed kernels as well (by
	checking for gzip magic numbers).
	* lib/vsprintf.c (vsprintf): Patch from Matt Wilson, fix the 'h'
	format in vsprintf().
	* utils.c: Patch from Matt Wilson <msw@redhat.com>, to allow
	compiling against linux 2.3 header files.

2000-05-02  David Huggins-Daines  <dhd@linuxcare.com>

	* Makefile: Added the ability to build a debugging aboot that runs
	as a userspace program.  Great for filesystem code debugging.
	Also, optimize for size instead of speed.
	* aboot.c: Remove a.out support, add multiple ELF pheader
	support.  Also make the parameter offset, and kernel stack offset
	non-hardcoded in order to deal with new, bigger consoles.
	* disk.c: Change "plain" to "uncompressed" and load_aout() to
	load_uncompressed().  Implement multiple pheaders for raw boot
	(untested) and uncompressed boot (tested). Also look for
	alternative config files (needed for CD booting and such)
	* fs/ext2.c: Cache the root inode, and do proper 64-bit arithmetic
	in ext2_iget() so that >2G filesystems work reliably (doh!)
	* head.S: make run_kernel() assembly in order to save a few bytes.
	* include/aboot.h: prototype run_kernel as attribute((noreturn)),
	maybe this will save a few bytes too.
	* fs/ufs.c: Implement dummy fstat().  I don't really know if the
	UFS code still works, and I'm tempted to remove it.
	* include/cons.h: Add a definition of the CTB, though we don't
	really use it yet.
	* include/iso.h: Rock Ridge constants
	* lib/isolib.c: Rock Ridge filenames, code cleanup, and fix the
	bug where 2048-byte blocks don't work.
	* zip/misc.c: necessary stuff for multiple pheaders.

2000-04-10  David Huggins-Daines  <dhuggins@linuxcare.com>

	* lib/isolib.c (iso_iget): Gar!  More stupidity in the ISO code,
	now fixed (see comment about *pnt being overwritten).  With luck
	this should be 0.7 final, so I won't need to do another 0.6

2000-04-02  David Huggins-Daines  <dhuggins@linuxcare.com>

	* lib/isolib.c: Fix some obvious stupidity in the ISO code (could
	cause a failure to load the kernel in some cases due to reading
	past the end of the device.
	* sdisklabel/swriteboot.c (read_configured_partition): Eek!  I
	thought I had fixed the problems I created with installing aboot
	on new disks.  Obviously I didn't.  Thanks to Martin Lucina
	<mato@kotelna.sk> for inadvertently finding the case I missed.

2000-03-23  David Huggins-Daines  <dhuggins@linuxcare.com>

	* cons.c: Patch from David North <d_north@thurien.tditx.com>, via
	Greg W. Johnson (gwj@debian.org), fixes serial console output on
	some boxes.
	* fs/iso.c: gwj@debian.org: silence compiler warnings
	* include/isolib.h: ditto
	* lib/string.c: ditto
	* sdisklabel/swriteboot.c: add abootconf functionality to
	swriteboot (where it probably belongs)

2000-03-06  David Huggins-Daines  <dhuggins@linuxcare.com>

	* aboot-0.6: At long last we have a new aboot.  This is somewhat
	of an interim release, as it doesn't have all the features I'd
	like (it doesn't list directories or follow symlinks on ISO9660 or
	UFS filesystems, for example, nor does it support initrd), but it
	integrates the large number of patches that have been added by
	various distributions, adds symlink-following, initrd, and
	directory-listing support on ext2 at least, and generally works
	better.

Sat Aug 17 18:58:36 1996  David Mosberger-Tang  <davidm@azstarnet.com>

	* disk.c (get_boot_device): New function.  If it guesses wrong,
	explicitly specify bootdevice= via commandline.
	(get_options): Add support for bootdevice= and bootfile= options
	to enable Red Hat installation.

	* sdisklabel/library.c (overlaplabel): FORCE is now a bitset.
	If bit i is set, overlaps with partition i+1 are allowed.
	* sdisklabel/sdisklabel.c (set_partition): Update accordingly.

	* sdisklabel/swriteboot.c (main): Make 1 be the first partition
 	(not 0) to be consistent with Linux kernel numbering.  Make
 	force_overlap a bitset so we can force more than one overlapping
 	partition.

	* disk.c (load_kernel): If kernel load fails, drop into
 	interactive mode.

	* fs/ext2.c (ext2_iget): Make OFFSET a long, not an int so we can
 	boot from a partition that starts at an offset > 2GB.

Fri May 10 16:48:25 1996  David Mosberger-Tang  <davidm@koppel.cs.arizona.edu>

	* main.c: split out disk booting into disk.c and netbooting into
	net.c.

Fairly recently:
	* Network booting support added by Dave Larson
	  <dlarson@cs.arizona.edu>

A long time ago:
 	* Default commandline argument handling by Michael Schwingen 
	  <rincewind@discworld.oche.de>

A very long time ago:
	* Filesystem support added by David Mosberger <davidm@cs.arizona.edu>
