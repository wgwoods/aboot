.\" This manpage has been automatically generated by docbook2man-spec
.\" from a DocBook document.  docbook2man-spec can be found at:
.\" <http://shell.ipoline.com/~elmert/hacks/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "SDISKLABEL" "8" "17 Januar 2003" "sdisklabel" ""
.SH NAME
sdisklabel \- Create/modify disklabels on Linux/Alpha systems
.SH "SYNOPSIS"
.PP
sdisklabel \fIdrive [print|zero|sum]\fR
.PP
sdisklabel \fIdrive size partsize\fR
.PP
sdisklabel \fIdrive partnum offset size parttype\fR
.SH "DESCRIPTIONS"
.PP

\fBsdisklabel\fR
can be used to create partitions (called disklabels) on Linux/Alpha
systems. You \fBmust\fR use disklabels instead of the
DOS type
partitioning scheme on any hard disk which you want to boot from via SRM or
which you want to share with HP True64.
If you instead are booting from \fBmilo\fR
then you \fBmust not\fR use disklabels on your boot hard disk.
.PP
Even if you are using disklabels, it is recommended to use 
\fBfdisk\fR(8) instead
of \fBsdisklabel\fR.
.PP
\fBsdisklabel\fR also assumes 
you have a SCSI disk with 512-byte sectors,
though it should work fine on an IDE drive as well. All sizes are
specified on the command line in sectors.
.PP
There are 8 partitions in total which are numbered from 0 to 7. They
correspond to BSD disklabels A to H.
Partitions have to be added sequentially, as 
\fBsdisklabel\fR won't let
you leave empty partitions unlike many BSD disklabel programs. If you
want this (or if you want overlapping disk labels) 
use \fBfdisk\fR(8) instead.
.PP
First off, if you have an invalid disk label (you've never run 
\fBsdisklabel\fR on this disk
before) you have to issue
.PP
\fBsdisklabel \fI/dev/sda zero\fB\fR
.PP
(\fI/dev/sda\fR is the device you're partitioning, 
substitute as appropriate).
.PP
This zeros out your disk label. Only do this if you really want to
zero your disk label. It just does it; it doesn't ask, or warn, or
anything.
.PP
The program also probably printed out the size of your disk in Kb. If
it was wrong, you now get to use the "\fIsize xxx\fR"
option along with the
rest of these commands. The size isn't critical, it's just used to try
and make sure you don't go past the end of the disk.
.PP
Next, add your first partition. This \fBdoesn't\fR
start from 0, as you
have to leave room for the boot loader and other stuff. 256K (or 512
sectors) will be enough.
.PP
Let's pretend that you want to make a 250000 Kb partition starting
from sector offset 512:
.PP
\fBsdisklabel \fI/dev/sda 0 512 500000 8 print\fB\fR
.PP
The last number is the filesystem type, and is currently 8 for ext2fs
filesystems. (A different number would be used to specify an
True 64
partition, for example).
.PP
If all was successful, the program should print out the partition (the
last keyword, "print", specifies that it should print the partition
after modifying it with the previous command), and you should see
something like
.PP
.sp
.RS
.sp
.nf
----------------------------------------------------------
I think your disk is 528870K total size.
If I'm wrong, override the size with the 'size num' option

partition 0: type 8, starts sector 512, size 500000
----------------------------------------------------------
.sp
.fi
.RE
.sp
.PP
You can then add the next partition, which would be partition 1.
To add a second partition that is 200000 Kb long, you'd run
.PP
\fBsdisklabel \fI/dev/sda 1 512256 400000 8 print\fB\fR
.PP
And both partitions would then be printed out.
.PP
If for some reason the size got determined incorrectly, you'd do
instead
.PP
\fBsdisklabel \fI/dev/sda size 528870 0 512 400000 8 print\fB\fR
.PP
The size option should come immediately after the device name, and the
size is the total # of sectors on the drive.
.SH "BUGS"
.PP
\fBsdisklabel\fR does not check for all errors, so
use with care.
.SH "NOTES"
.PP
If you want to share the disk with HP True64
(OSF/1) it is recommended to
use the True64 
partitioning tools to prepare the disk.
.PP
To actually boot from the freshly labeled disk you also need to install
a boot strap as well, see
\fBaboot\fR(8) and \fBswriteboot\fR(8)
for details.
.PP
The print command may be placed before or after any other command.
.PP
In case you do want to leave empty partitions or create lables wich
extend beyond the end of the disk (e.g. when you know 
\fBsdisklabel\fR is reporting a wrong size) then
use can use the \fIforce\fR switch on the command line.
.SH "AUTHOR"
.PP
This man page was written by Helge Kreutzmann <kreutzm@itp.uni-hannover.de> for the Debian GNU/Linux project but may be used by others. It is
heavily based on the \fIREADME\fR provided along with the
\fBsdisklabel\fR source.
.SH "SEE ALSO"
.PP
\fBfdisk\fR(8), \fBaboot\fR(8), \fBswriteboot\fR(8)
